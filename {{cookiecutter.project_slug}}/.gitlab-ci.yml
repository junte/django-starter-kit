image: registry.gitlab.com/junte/docker-hub/docker:19

variables:
  DOCKER_CACHE_IMAGE: $CI_REGISTRY_IMAGE/cache
  DOCKER_IMAGE: $CI_REGISTRY_IMAGE/tmp:${CI_PIPELINE_ID}_${CI_COMMIT_SHA}
  DOCKER_TEST_IMAGE: $CI_REGISTRY_IMAGE/tmp:${CI_PIPELINE_ID}_${CI_COMMIT_SHA}_test

stages:
  - pre_build
  - build
  - test
  - publish
  - deploy

dockerfile:lint:
  image: registry.gitlab.com/junte/docker-hub/hadolint/hadolint:v1.19.0-44-gf364c91-debian
  stage: pre_build
  script:
    - hadolint deploy/Dockerfile

build:
  stage: build
  services:
    - registry.gitlab.com/junte/docker-hub/docker:19-dind
  script:
    - docker login -u gitlab-ci-token -p $CI_JOB_TOKEN registry.gitlab.com
    - docker pull $DOCKER_CACHE_IMAGE || true
    - docker build --cache-from $DOCKER_CACHE_IMAGE -t $DOCKER_TEST_IMAGE -t $DOCKER_CACHE_IMAGE --target test -f deploy/Dockerfile .
    - cat deploy/.dockerignore.production >> .dockerignore
    - docker build --cache-from $DOCKER_CACHE_IMAGE -t $DOCKER_IMAGE --target production -f deploy/Dockerfile .
    - docker push $DOCKER_TEST_IMAGE
    - docker push $DOCKER_IMAGE
    - docker push $DOCKER_CACHE_IMAGE

quality:
  image: $DOCKER_TEST_IMAGE
  stage: test
  script:
    - cd /app
    - make check_quality

test:
  image: $DOCKER_TEST_IMAGE
  stage: test
  variables:
    DJANGO_ENV: test
  services:
    - postgres:12.1
  script:
    - cd /app
    - pytest -n auto --cov-report=html:coverage_html
    - mkdir $CI_PROJECT_DIR/coverage
    - coverage report -m > $CI_PROJECT_DIR/coverage/report.log
    - cat $CI_PROJECT_DIR/coverage/report.log | tail -n 1
    - mv coverage_html $CI_PROJECT_DIR/coverage/html
  coverage: '/TOTAL.+ ([0-9]{1,3}%)/'
  artifacts:
    paths:
      - coverage

.publish:base:
  stage: publish
  dependencies: []
  services:
    - registry.gitlab.com/junte/docker-hub/docker:19-dind
  before_script:
    - docker login -u gitlab-ci-token -p $CI_JOB_TOKEN registry.gitlab.com
    - docker pull $DOCKER_IMAGE
  script:
    - docker tag $DOCKER_IMAGE $TARGET_IMAGE
    - docker push $TARGET_IMAGE

publish:unstable:
  extends: .publish:base
  only:
    - master
  variables:
    TARGET_IMAGE: $CI_REGISTRY_IMAGE/unstable:${CI_PIPELINE_ID}


.deploy:base:
  image: registry.gitlab.com/junte/docker-hub/curl:7.72.0
  stage: deploy
  dependencies: []
  script:
    - curl -k -X POST -d "component=${DEPLOYER_COMPONENT}&key=${DEPLOYER_KEY}&tag=${CI_PIPELINE_ID}" ${DEPLOYER_HOST}

deploy:development:
  extends: .deploy:base
  only:
    - master
  environment:
    name: development
    url: $SITE_ADDRESS
